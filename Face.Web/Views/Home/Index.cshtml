@{
    ViewData["Title"] = "Home Page";
}


<div class="wrapper">

    <div class="app-title">
        <p>人脸识别</p>
    </div>

    <ul class="nav nav-pills nav-fill mb-3" id="pills-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="pills-upload-tab" data-toggle="pill" href="#pills-upload" role="tab" aria-controls="pills-upload" aria-selected="true">注册</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-verify-tab" data-toggle="pill" href="#pills-verify" role="tab" aria-controls="pills-verify" aria-selected="false">识别</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-camera-tab" data-toggle="pill" href="#pills-camera" role="tab" aria-controls="pills-camera" aria-selected="false">相机</a>
        </li>
    </ul>

    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-upload" role="tabpanel" aria-labelledby="pills-upload-tab">
            <!-- core part for image upload to add image to kairo gallery -->
            <div class="row">
                <div class="col-md-6">
                    <form enctype="multipart/form-data" v-on:submit.prevent="onSubmit">
                        <div class="form-group">
                            <label for="">名字:</label>
                            <input type="text" required class="form-control" placeholder="小明" name="subject_name" v-model="model.name">
                        </div>

                        <div class="form-group">
                            <label for="">群组:</label>
                            <input type="text" required class="form-control" placeholder="BOSCH" name="subject_name" v-model="model.group">
                        </div>

                        <div class="form-group">
                            <label for="">头像:</label>
                            <input type="file" class="form-control" accept="image/*" name="image" v-on:change="upload($event.target.files)">
                        </div>

                        <div class="form-group">
                            <button class="btn btn-primary">上传</button>
                            {{ loading }}
                            {{ uploadStatus }}
                        </div>
                    </form>
                </div>

                <div class="col-md-6">
                    <p style="text-align:center;">图像预览</p>
                    <div class="col-md-6" style="text-align:center;">
                        <img id="face_preview1" class="img-responsive" alt=""  height="200">
                        <p style="text-align:center;">{{ model.name }}</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="pills-verify" role="tabpanel" aria-labelledby="pills-verify-tab">
            <!-- core part for image upload to verify -->
            <div class="row">
                <div class="col-md-6">
                    <form enctype="multipart/form-data" v-on:submit.prevent="onSubmit">
                        <div class="form-group">
                            <label for="">群组:</label>
                            <input type="text" required class="form-control" placeholder="BOSCH" name="subject_name" v-model="model.group">
                        </div>

                        <div class="form-group">
                            <label for="">上传需要识别的头像图片：</label>
                            <input type="file" class="form-control" accept="image/*" name="image" v-on:change="upload($event.target.files)">
                        </div>

                        <div class="form-group">
                            <button class="btn btn-primary">识别</button>
                            <span class="fa fa-spin fa-spinner" id="verify_spinner" style="display:none;" aria-hidden="true"></span>
                            {{ loading }}
                        </div>
                    </form>
                </div>

                <div class="col-md-6">
                    <p style="text-align:center;">图像预览</p>
                    <div class="col-md-6" style="text-align:center;">
                        <img id="face_preview2" class="img-responsive" alt=""  height="200">
                        <p style="text-align:center;">{{ resultStatus }}</p>
                        <p style="text-align:left;">{{ resultName }}</p>
                        <p style="text-align:left;">{{ resultScore }}</p>
                     </div>
                </div>
            </div>
        </div>

        <div id="pills-camera" class="tab-pane fade">
            <video id="video" v-bind:width="this.video.width" v-bind:height="this.video.height" preload autoplay loop muted></video>
            <canvas id="canvas" v-bind:width="this.video.width" v-bind:height="this.video.height"></canvas>

            <div class="buttonDiv">
                <button class="btn btn-primary" v-on:click="submit()">点击识别</button>
            </div>

            <div class="resultDiv">
                <p>用户名：{{resultName}}</p>
                <p>匹配度：{{resultScore}}</p>
                <p>识别状态：{{resultStatus}}</p>
            </div>
        </div>
    </div>

</div>

<style>
    .wrapper {
        padding-top: 20px;
    }

    .app-title {
        text-align: center;
        margin-bottom: 10px;
    }

    video, canvas {
        top: 0;
    }

    .buttonDiv {
        bottom: 10%;
    }

    .resultDiv {
        bottom: 20%
    }
</style>

<script>
    var upload = new Vue({
        el: '#pills-upload',
        data: function () {
            return {
                model: {
                    name: '小明',
                    image: null,
                    item: '',
                    group:'BOSCH'
                },
                loading: '',
                uploadStatus: '',
            }
        },
        methods: {
            upload: function (files) {
                this.model.image = files[0];
                this.uploadStatus = '';
                this.showPreview(files[0]);
            },
            showPreview: function (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("face_preview1").src = e.target.result;
                };
                // read the image file as a data URL.
                reader.readAsDataURL(file);
            },
            onSubmit: function () {
                // Assemble form data
                const formData = new FormData()
                formData.append('Image', this.model.image);
                formData.append('UserId', this.model.name);
                formData.append('GroupId', this.model.group);
                this.loading = "上传头像中，请稍等."
                // Post to server
                axios.post('http://localhost:51846/api/Face/Upload', formData)
                    .then(res => {
                        // Post a status message
                        this.loading = '头像上传完成！';
                        this.uploadStatus = res.data.msg;
                    })
            }
        }
    })

    var verify = new Vue({
        el: '#pills-verify',
        data: function () {
            return {
                model: {
                    image: null,
                    group: 'BOSCH',
                    name:''
                },
                loading: '',
                resultStatus: '',
                resultDetails: '',
                resultName: '',
                resultGroup: '',
                resultScore:''
            }
        },
        methods: {
            upload: function (files) {
                this.model.image = files[0];
                this.resultStatus = '';
                this.resultName = '';
                this.resultGroup = '';
                this.resultScore = '';
                this.showPreview(files[0]);
            },
            showPreview: function (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("face_preview2").src = e.target.result;
                };
                // read the image file as a data URL.
                reader.readAsDataURL(file);
            },
            onSubmit: function () {
                // Assemble form data
                const formData = new FormData()
                formData.append('Image', this.model.image);
                formData.append('GroupId',this.model.group);
                this.loading = "头像识别中，请稍等."
                // Post to server
                axios.post('http://localhost:51846/api/Face/Verify', formData)
                    .then(res => {
                        // Post a status message saying the upload complete
                        this.loading = '头像识别完成';
                        if (res.data.msg == "success") {
                            this.resultName = "用户名：" + res.data.data.result[0].user_id;
                            this.resultScore = "匹配度：" + res.data.data.result[0].score;
                        } else {
                            this.resultStatus = "错误："+res.data.msg;
                        }
                   })
            }
        }
    })

    var camera = new Vue({
        el: '#pills-camera',
        data: function() {
            return {
                model: {
                    image: null,
                    group: 'BOSCH',
                    name: ''
                },
                video: {
                    width: 740,
                    height: 480
                },
                resultName: "",
                resultScore: "",
                resultStatus: "",
                loading: "",
                submitting: false
            }
        },
        mounted: function() {
            this.openCamera();
        },
        methods: {
            stopTracking: function () {
                // 停止侦测
                this.trackerTask.stop()
                // 关闭摄像头
                this.trackerTask.closeCamera()
            },
            dataURLtoFile: function (dataurl, filename = "file", type) {
                let arr = dataurl.split(",");
                let bstr = atob(arr[1]);
                !type && (type = arr[0].replace("data:", "").replace(";base64", ""));
                let n = bstr.length,
                    u8arr = new Uint8Array(n);
                while (n--) {
                    u8arr[n] = bstr.charCodeAt(n);
                }
                return new File([u8arr], filename, {
                    type
                });
            },
            openCamera() {

                navigator.mediaDevices.getUserMedia({ video: { facingMode: 'user' } }).then(function (stream) {
                    document.getElementById('video').srcObject = stream;
                });

                var canvas = document.getElementById('canvas');
                var context = canvas.getContext('2d');
                var ref = this;

                var tracker = new tracking.ObjectTracker('face');

                tracker.setInitialScale(4);
                tracker.setStepSize(2);
                tracker.setEdgesDensity(0.1);

                console.log("traker initialized")

                this.trackerTask = tracking.track('#video', tracker, { camera: true });

                tracker.on('track', function (event) {

                    context.clearRect(0, 0, canvas.width, canvas.height);

                    event.data.forEach(function (rect) {
                        // draw rect angle on face and display result
                        context.font = '11px Helvetica';
                        context.strokeStyle = '#a64ceb';
                        context.strokeRect(rect.x, rect.y, rect.width, rect.height);
                        if (!ref.submitting && ref.resultStatus != "success") {
                            ref.submitting = true;
                            ref.submit()
                        }
                    });
                });

            },
            submit() {
                let canvas = document.getElementById('canvas')
                let context = canvas.getContext('2d')
                let video = document.getElementById('video')

                // get face image
                context.drawImage(video, 0, 0, this.video.width, this.video.height)
                this.model.image = this.dataURLtoFile(canvas.toDataURL(), "image.png");

                const formData = new FormData()

                formData.append('Image', this.model.image);
                formData.append('GroupId', this.model.group);

                // post to server
                this.axios.post('http://localhost:51846/api/Face/Verify', formData)
                    .then(res => {
                        // Post a status message saying the upload complete
                        if (res.data.msg == "success") {
                            this.resultName = res.data.data.result[0].user_id;
                            this.resultScore = res.data.data.result[0].score;
                            this.resultStatus = res.data.msg;
                        } else {
                            this.resultScore = "";
                            this.resultName = "";
                            this.resultStatus = res.data.msg;
                        }

                        this.submitting = false;
                    })
            }
        },
        destroyed() {
            this.stopTracking();
        }
    })
</script>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
